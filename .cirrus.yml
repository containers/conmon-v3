---
# Main collection of env. vars to set for all tasks and scripts.
env:
  ####
  #### Global variables used for all tasks
  ####
  CONMON_SLUG: "github.com/containers/conmon-v3"

  # Overrides default location (/tmp/cirrus) for repo clone (will become $SRC)
  CIRRUS_WORKING_DIR: "/var/tmp/src/${CONMON_SLUG}"
  # Required so $ENVLIB gets loaded and /bin/sh is not used
  CIRRUS_SHELL: "/bin/bash"
  # Save a little typing (path relative to $CIRRUS_WORKING_DIR)
  SCRIPT_BASE: "./contrib/cirrus"
  # Spoof self as travis, as cirrus has the same test issues as travis does
  TRAVIS: "true"

  # VM Image built in containers/automation_images
  IMAGE_SUFFIX: "c20250721t181111z-f42f41d13"
  FEDORA_CACHE_IMAGE_NAME: "fedora-${IMAGE_SUFFIX}"

  # Container FQIN's
  FEDORA_CONTAINER_FQIN: "quay.io/libpod/fedora_podman:${IMAGE_SUFFIX}"
  PRIOR_FEDORA_CONTAINER_FQIN: "quay.io/libpod/prior-fedora_podman:${IMAGE_SUFFIX}"

# Only github users with write-access can define or use encrypted variables
# This credential represents a service account with access to manage both VMs
# and storage.
gcp_credentials: ENCRYPTED[072d75e494fa95908939f094e39574821746123918596748931d52277ac5ef9dd2029ac81d5c6c02f8dbb39783eaa972]

# Default VM to use unless set or modified by task
gce_instance:
  image_project: "libpod-218412"
  zone: "us-central1-f" # Required by Cirrus for the time being
  cpu: 2
  memory: "4Gb"
  disk: 200 # Required for performance reasons
  image_name: "${FEDORA_CACHE_IMAGE_NAME}"

# Default timeout for each task
timeout_in: "120m"

# Verify build completes successfully
build_task:
  # Runs within Cirrus's "community cluster"
  gce_instance:
    image_name: "${FEDORA_CACHE_IMAGE_NAME}"
    cpu: 1
    memory: 4
    disk: 200

  script:
    - dnf install -y rust make cargo
    - cd $CIRRUS_WORKING_DIR
    - make

# Run the `make unit`
unit_task:
  # Runs within Cirrus's "community cluster"
  gce_instance:
    image_name: "${FEDORA_CACHE_IMAGE_NAME}"
    cpu: 1
    memory: 4
    disk: 200

  script:
    - dnf install -y rust make cargo
    - cd $CIRRUS_WORKING_DIR
    - make
    - make unit

# Run the `make e2e`
e2e_task:
  # Runs within Cirrus's "community cluster"
  gce_instance:
    image_name: "${FEDORA_CACHE_IMAGE_NAME}"
    cpu: 1
    memory: 4
    disk: 200

  script:
    - dnf install -y rust make cargo
    - cd $CIRRUS_WORKING_DIR
    - make
    - make e2e


# This task is critical.  It updates the "last-used by" timestamp stored
# in metadata for all VM images.  This mechanism functions in tandem with
# an out-of-band pruning operation to remove disused VM images.
meta_task:
  name: "VM img. keepalive"
  alias: meta
  container:
    cpu: 2
    memory: 2
    image: quay.io/libpod/imgts:latest
  env:
    # Space-separated list of images used by this repository state
    IMGNAMES: >-
      ${FEDORA_CACHE_IMAGE_NAME}
    BUILDID: "${CIRRUS_BUILD_ID}"
    REPOREF: "${CIRRUS_REPO_NAME}"
    GCPJSON: ENCRYPTED[abcb0db1941b566334e14509776e4d93e816613d106afde68bfd13e207974a7941653c94c6070fb4c79412e6b623add1]
    GCPNAME: ENCRYPTED[6b7e70a27b01f282275cc12864243ea1d766986fa40689ef1d39a03e48accda2c99aea6679760bef79452b6e613eb89e]
    GCPPROJECT: libpod-218412
  clone_script: &noop mkdir -p $CIRRUS_WORKING_DIR
  script: /usr/local/bin/entrypoint.sh
